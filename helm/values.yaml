nameOverride:
fullnameOverride:
# --------------- common --------------
commonLabels:
commonAnnotations:
# ----------- initContainers ----------
volumePermissions:
  enabled: false
# ------ volumes and volumeMounts -----
persistence:
  enabled: false
# ----------- command/debug -----------
diagnosticMode:
  enabled: false
# --------- MAIN_OBJECT_BLOCK ---------
configValues:
  deploymentAnnotations:
    # collectord.io/index: '' # PROVIDE SPLUNK INDEX
  autoscaling:
    enabled: false
  replicaCount: 1
  podAnnotations:
    enabled: true
    resetOnConfigChange: true
    annotations:
  prometheus:
    scrape: false
  metrics:
    enabled: false
  tracing:
    enabled: false
  # topologySpreadConstraints:
  #   - maxSkew: 1
  #     topologyKey: zone
  #     whenUnsatisfiable: DoNotSchedule
  #     labelSelector:
  #       matchLabels:
  #         app.kubernetes.io/name: '{{ include "common.names.name" . }}'
  podSecurityContext:
    enabled: false
  # ----------- containers ------------
  image:
    repository: catalog-app
    tag: v1.1.1
    pullPolicy: Always
    debug: false
  containerSecurityContext:
    enabled: true
    allowPrivilegeEscalation: false
    # runAsUser: 0
  extraEnvVars:
    - name: SERVER_PORT
      value: '{{ .Values.configValues.containerPorts.http }}'
  extraEnvVarsCM: '{{ template "common.names.fullname" . }}'
  extraEnvVarsSecret:
  resources:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 50m
      memory: 500Mi
  containerPorts:
    http: 8080
    https: 443
  customLivenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
    httpGet:
      path: /env-config.js
      port: http
  customReadinessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
    httpGet:
      path: /env-config.js
      port: http
  startupProbe:
    enabled: false
  extraVolumeMounts:
    - name: nginx-config
      mountPath: /etc/nginx/conf.d/default.conf
      subPath: default.conf
  extraVolumes:
    - name: nginx-config
      configMap:
        name: '{{ template "common.names.fullname" . }}'
        items:
          - key: default.conf
            path: default.conf
env:
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
  publicUrl: ''
  serviceUrl: ''
  serviceProtocol: http://
  mapServerPublishPoint: ''
  mapServerUrl: ''
  mapServerChannel: ''
  mapServerVersion: ''
  mapServerRequest: ''
  activeLayer: OSM_LAYER
  loggerHttpHost: ''
  loggerHttpPort: ''
  loggerHttpPath: ''
  loggerLevel: warn
  bboxAreaSquareKmLimit: 10000
  language: he
  backendLocale: he
  jobStatus:
    pollingCycleInterval: 120000
  defaultUser:
    role: USER
  runningMode:
    type: PRODUCTION
    autoComplete: false
  export:
    defaultZoomLevel: '' #todo
    maxZoomLevel: '' #todo
  map:
    center: '[34.811, 31.908]'
    zoom: 7
    mapMode2D: INFINITE_SCROLL
    useOptimizedTileRequests: false
    showDebuggerTool: false
    showActiveLayersTool: true
    showGeocoderTool: true
  baseMaps: '{ "maps": [ { "id": "1st", "title": "1st Map", "isForPreview": true, "thumbnail": "https://mt1.google.com/vt/lyrs=s&x=6&y=4&z=3", "baseRasterLayers": [ { "id": "GOOGLE_TERRAIN", "type": "XYZ_LAYER", "opacity": 1, "zIndex": 0, "options": { "url": "https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}", "layers": "", "credit": "GOOGLE" } }, { "id": "INFRARED_RASTER", "type": "WMS_LAYER", "opacity": 0.6, "zIndex": 1, "options": { "url": "https://mesonet.agron.iastate.edu/cgi-bin/wms/goes/conus_ir.cgi?", "layers": "goes_conus_ir", "credit": "Infrared data courtesy Iowa Environmental Mesonet", "parameters": { "transparent": "true", "format": "image/png" } } } ] }, { "id": "2nd", "title": "2nd Map", "thumbnail": "https://mt1.google.com/vt/lyrs=s&x=6&y=4&z=3", "baseRasterLayers": [ { "id": "RADAR_RASTER", "type": "WMS_LAYER", "opacity": 0.6, "zIndex": 1, "options": { "url": "https://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r.cgi?", "layers": "nexrad-n0r", "credit": "Radar data courtesy Iowa Environmental Mesonet", "parameters": { "transparent": "true", "format": "image/png" } } }, { "id": "GOOGLE_TERRAIN", "type": "XYZ_LAYER", "opacity": 1, "zIndex": 0, "options": { "url": "https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}", "layers": "", "credit": "GOOGLE" } }, { "id": "VECTOR_TILES_GPS", "type": "XYZ_LAYER", "opacity": 1, "zIndex": 2, "options": { "url": "https://gps.tile.openstreetmap.org/lines/{z}/{x}/{y}.png", "layers": "", "credit": "openstreetmap" } } ] }, { "id": "3rd", "title": "3rd Map", "isCurrent": true, "thumbnail": "https://a.tile.thunderforest.com/cycle/17/78208/53265.png", "baseRasterLayers": [ { "id": "VECTOR_TILES", "type": "XYZ_LAYER", "opacity": 1, "zIndex": 0, "options": { "url": "https://{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png?apikey=6170aad10dfd42a38d4d8c709a536f38", "layers": "", "credit": "thunderforest" } }, { "id": "VECTOR_TILES_GPS", "type": "XYZ_LAYER", "opacity": 1, "zIndex": 1, "options": { "url": "https://gps.tile.openstreetmap.org/lines/{z}/{x}/{y}.png", "layers": "", "credit": "openstreetmap" } } ] } ] }'
  defaultTerrainProviderUrl: ''
  webToolsUrl: ''
  modelViewerRoute: ''
  modelViewerTokenValue: ''
  whatsnewUrl: ''
  projectVersion: ''
  activeLayerPropeties:
    mapUrlPath: '' #todo
    exportPath: '' #todo
    urlPattern:
      service: ''
      layers: ''
      tiled: true
      matrixSet: ''
      style: ''
      projection: ''
  sitesConfig: '{"masters": [{ "dns": "http://localhost:3000", "isAlias": "false" }], "slaves": [{ "dns": "http://localhost:8090", "isAlias": "false" }], "generics": []}'
  bffPath: ''
  polygonParts:
    featureTypePrefix: ''
    densityFactor: 0.3
    geometryErrorsThreshold: 0.05
    areaThreshold: 5
    max:
      WFSFeatures: 500
      showFootprintZoomLevel: 10
      perShape: 300
      vertices: 300000
  wfs:
    style: '{"color": "#01FF1F", "hover": "#24AEE9", "pointStroke": "#01FF1F"}'
    keyField: 'id'
    max:
      pageSize: 300
      zoomLevel: 14
      cacheSize: 6000
  geocoder:
    url: ''
    callbackUrl: ''
route:
  enabled: true
  annotations:
    haproxy.router.openshift.io/rewrite-target: /
  timeout:
    enabled: false
    duration: 60s
  routesMapping:
    - hostname:
      path: /
      suffix:
  targetPort: http
  tls: 
    enabled: true
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
    useCerts: false
  extraRules:
ingress:
  enabled: false
  apiVersion:
  type: nginx-kubernetes
  annotations:
  pathType: Prefix
  hostname: libot.wwest.local
  extraHosts: []
  extraPaths: []
  path: /ui
  extraRules: []
  extraTls: []
  selfSigned: false
  tls: true
  cors:
    enabled: true
    origin: '*'
service:
  annotations:
  ports:
    http: 80
  protocol: TCP
serviceAccount:
  create: false
